name: CI

on:
  push:
    branches: [ "main","develop" ]
  pull_request:
    branches: [ "main","develop" ]

  workflow_dispatch:

jobs:
  Import_SQL:
    runs-on: ubuntu-latest
    name: MySQL Deploy Action
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: gtadam/mysql-deploy-action@v1
        with:
          DATABASE_HOST: ${{secrets.SERVER_REMOTE}}
          DATABASE_PORT: '3306'
          DATABASE_NAME: ${{secrets.SERVER_DB_NAME}}
          DATABASE_USERNAME:  ${{secrets.SERVER_DB_USERNAME}}
          DATABASE_PASSWORD:   ${{secrets.SERVER_DB_PASSWORD}}
          DATABASE_SCRIPT: 'script.sql'

  Deploy_staging:
    name: Deploy Staging
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: 
      name: 'Staging'
      url: http://tp1-crud-master.herokuapp.com/
    needs: [Import_SQL]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tp1-crud-master" #Must be unique in Heroku
          heroku_email: "gastonbarbaccia@hotmail.com"

  Deploy_production:
    name: Deploy Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: 
      name: 'Production'
      url: http://tp1-crud-master.herokuapp.com/
    needs: [Deploy_staging]
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tp1-crud-master" #Must be unique in Heroku
          heroku_email: "gastonbarbaccia@hotmail.com"
